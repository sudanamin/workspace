package com.example.sudan;


import android.support.v4.view.ViewPager;
import android.support.v7.app.ActionBarActivity;

import static com.androidhive.pushnotifications.CommonUtilities.DISPLAY_MESSAGE_ACTION;
import static com.androidhive.pushnotifications.CommonUtilities.SENDER_ID;
import static com.example.sudan.gcm.CommonUtilities.DISPLAY_MESSAGE_ACTION;
import static com.example.sudan.gcm.CommonUtilities.EXTRA_MESSAGE;
import static com.example.sudan.gcm.CommonUtilities.SENDER_ID;

import com.androidhive.pushnotifications.MainActivity;
import com.androidhive.pushnotifications.R;
import com.androidhive.pushnotifications.ServerUtilities;
import com.example.sudan.gcm.AlertDialogManager;
import com.example.sudan.gcm.ConnectionDetector;
import com.example.sudan.adapters.ViewPagerAdapter;
import com.example.sudan.gcm.WakeLocker;
import com.example.sudan.util.SlidingTabLayout;
import com.google.android.gcm.GCMRegistrar;

import android.annotation.SuppressLint;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.text.Html;
import android.text.Spanned;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.webkit.WebSettings;
import android.widget.TextView;
import android.widget.Toast;

/**
 * Created by Edwin on 15/02/2015.
 */
@SuppressLint("NewApi")
@SuppressWarnings("deprecation")
public class MainActivity extends ActionBarActivity {

	// Declaring Your View and Variables
	AsyncTask<Void, Void, Void> mRegisterTask;

//////////////////////////////////////////////
	
// Asyntask
//AsyncTask<Void, Void, Void> mRegisterTask;

// Alert dialog manager
com.example.sudan.gcm.AlertDialogManager alert = new com.example.sudan.gcm.AlertDialogManager();

// Connection detector
com.example.sudan.gcm.ConnectionDetector cd;

public static String name;
public static String email;
	///////////////////////////////////////
	Toolbar toolbar;
	ViewPager pager;
	ViewPagerAdapter adapter;
	SlidingTabLayout tabs;
	CharSequence Titles[] = { "Home ", " Events ", " Montana ", " Alhilal " };
	int Numboftabs = 4;

	
	
	//@SuppressLint("NewApi")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
        
		
		
		
		//register task ....
        ///////////////////////////////////////////////////////////////////
		
		cd = new ConnectionDetector(getApplicationContext());

		// Check if Internet present
		if (!cd.isConnectingToInternet()) {
			// Internet Connection is not present
			alert.showAlertDialog(MainActivity.this,
					"Internet Connection Error",
					"Please connect to working Internet connection", false);
			// stop executing code by return
			return;
		}
		
		// Getting name, email from intent
		Intent i = getIntent();
		
		name = i.getStringExtra("name");
		email = i.getStringExtra("email");		
		
		// Make sure the device has the proper dependencies.
		GCMRegistrar.checkDevice(this);

		// Make sure the manifest was properly set - comment out this line
		// while developing the app, then uncomment it when it's ready.
		GCMRegistrar.checkManifest(this);

	//	lblMessage = (TextView) findViewById(R.id.lblMessage);
		//mainWebView = (WebView) findViewById(R.id.webView1);
		
		registerReceiver(mHandleMessageReceiver, new IntentFilter(
				DISPLAY_MESSAGE_ACTION));
		
		// Get GCM registration id
		final String regId = GCMRegistrar.getRegistrationId(this);

		// Check if regid already presents
		if (regId.equals("")) {
			// Registration is not present, register now with GCM			
			GCMRegistrar.register(this, SENDER_ID);
		} else {
			// Device is already registered on GCM
		/*if (GCMRegistrar.isRegisteredOnServer(this)) {
				// Skips registration.				
				Toast.makeText(getApplicationContext(), "Already registered with GCM", Toast.LENGTH_LONG).show();
			} else {*/
				// Try to register again, but not in the UI thread.
				// It's also necessary to cancel the thread onDestroy(),
				// hence the use of AsyncTask instead of a raw thread.
				final Context context = this;
				mRegisterTask = new AsyncTask<Void, Void, Void>() {

					@Override
					protected Void doInBackground(Void... params) {
						// Register on our server
						// On server creates a new user
						com.example.sudan.gcm.ServerUtilities.register(context, name, email, regId);
						return null;
					}

					@Override
					protected void onPostExecute(Void result) {
						mRegisterTask = null;
					}

				};
				mRegisterTask.execute(null, null, null);
			//}
		}
		
		
		
		///////////////////////////////////////////////////////////////////
		
		// Creating The Toolbar and setting it as the Toolbar for the activity
		toolbar = (Toolbar) findViewById(R.id.tool_bar);
		//getSupportActionBar().setDisplayShowHomeEnabled(true);
		//getSupportActionBar().setIcon(R.drawable.ic_action);
		//toolbar.setic();
		toolbar.setNavigationIcon(R.drawable.ic_launcher);
		TextView title = (TextView)findViewById(R.id.title);
		
		Typeface type = Typeface.createFromAsset(getAssets(),"Lato-Regular.ttf"); 
		Spanned text = Html.fromHtml(" <b>bold</b> and <i>italic</i> ");
		title.setTypeface(type);
		title.setText(text);
		toolbar.setTitle("amin");
		setSupportActionBar(toolbar);
		//toolbar.settext

		// Creating The ViewPagerAdapter and Passing Fragment Manager, Titles
		// fot the Tabs and Number Of Tabs.
		adapter = new ViewPagerAdapter(getSupportFragmentManager(), Titles,
				Numboftabs);

		// Assigning ViewPager View and setting the adapter
		pager = (ViewPager) findViewById(R.id.pager);
		pager.setAdapter(adapter);

		// Assiging the Sliding Tab Layout View
		tabs = (SlidingTabLayout) findViewById(R.id.tabs);
	//	tabs.setDistributeEvenly(true); // To make the Tabs Fixed set this true,
										// This makes the tabs Space Evenly in
										// Available width

		// Setting Custom Color for the Scroll bar indicator of the Tab View
		/*
		 * tabs.setCustomTabColorizer(new SlidingTabLayout.TabColorizer() {
		 * 
		 * @Override public int getIndicatorColor(int position) { return
		 * getResources().getColor(R.color.tabsScrollColor); } });
		 */
		tabs.setSelectedIndicatorColors(getResources().getColor(
				R.color.indicator));
		
		tabs.setDividerColors(getResources().getColor(R.color.Dividercolor));
		tabs.setBackgroundColor(getResources().getColor(R.color.aminbackground));
	//	tabs.setDividerColors(getResources().getColor(
		//		R.color.Dividercolor));
		/*tabs.setCustomTabColorizer(new SlidingTabLayout.TabColorizer() {

		    @Override
		    public int getIndicatorColor(int position) {
		    return getResources().getColor(R.color.white);    //define any color in xml resources and set it here, I have used white
		    }

		    @Override
		    public int getDividerColor(int position) {
		    return getResources().getColor(R.color.white);
		    }
		});*/
		// Setting the ViewPager For the SlidingTabsLayout
		tabs.setViewPager(pager);
		

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.menu_main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();

		// noinspection SimplifiableIfStatement
		if (id == R.id.action_settings) {
			return true;
		}

		return super.onOptionsItemSelected(item);
	}
	
	///////////////////////////////////////////////////////////////////////////
	
	
	
	private final BroadcastReceiver mHandleMessageReceiver = new BroadcastReceiver() {
		private WebSettings webSettings;

		@Override
		public void onReceive(Context context, Intent intent) {
			String newMessage = intent.getExtras().getString(EXTRA_MESSAGE);
			// Waking up mobile if it is sleeping
			WakeLocker.acquire(getApplicationContext());
			
			/**
			 * Take appropriate action on this message
			 * depending upon your app requirement
			 * For now i am just displaying it on the screen
			 * */
			
			// Showing received message
		//	lblMessage.append(newMessage + "\n");			
			Toast.makeText(getApplicationContext(), "New Message: " + newMessage, Toast.LENGTH_LONG).show();
			
			
			//load url into web view
			
	      /*  
	        webSettings = mainWebView.getSettings();
	        
	     //   mainWebView.setWebViewClient(new MyCustomWebViewClient());
	        mainWebView.setScrollBarStyle(View.SCROLLBARS_INSIDE_OVERLAY);
	        
	        mainWebView.loadUrl("http://google.com");*/
	    
	    
			// Releasing wake lock
			WakeLocker.release();
		}
	};
	
	@Override
	protected void onDestroy() {
		if (mRegisterTask != null) {
			mRegisterTask.cancel(true);
		}
		try {
			unregisterReceiver(mHandleMessageReceiver);
			GCMRegistrar.onDestroy(this);
		} catch (Exception e) {
			Log.e("UnRegister Receiver Error", "> " + e.getMessage());
		}
		super.onDestroy();
	}
	
}